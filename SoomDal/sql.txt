drop table admin cascade constraints;
drop table authorities cascade constraints;
drop table dalin cascade constraints;
drop table detailfield cascade constraints;
drop table estimate cascade constraints;
drop table field cascade constraints;
drop table jeja cascade constraints;
drop table memo cascade constraints;
drop table nowpayment cascade constraints;
drop table nowrefund cascade constraints;
drop table profileattachment cascade constraints;
drop table qnaboard cascade constraints;
drop table reportedboard cascade constraints;
drop table reproteduser cascade constraints;
drop table repquestion  cascade constraints;
drop table request cascade constraints;
drop table requestboard cascade constraints;
drop table requestpayment cascade constraints;
drop table review cascade constraints;
drop table reviewattachment cascade constraints;
drop table reviewauthority cascade constraints;
drop table usecash cascade constraints;
DROP TABLE MEMO CASCADE CONSTRAINTS;

drop sequence jeja_seq;
drop sequence repquestion_seq;
drop sequence dalin_seq;
drop sequence request_seq;
drop sequence qnacomment_seq;
drop sequence requestboard_seq;
drop sequence estimate_seq;
drop sequence memo_seq;
drop sequence detailfield_seq;
drop sequence review_seq;
drop sequence reviewattachment_seq;
DROP SEQUENCE MEMO_SEQ;

select * from tab;

create sequence JEJA_seq minvalue 0;
select JEJA_seq.nextval from dual;
create sequence RepQuestion_seq minvalue 0;
select RepQuestion_seq.nextval from dual;
create sequence DALIN_seq minvalue 0;
select dalin_seq.nextval from dual;
create sequence request_seq minvalue 0;
select request_seq.nextval from dual;
create sequence qnacomment_seq minvalue 0;
select qnacomment_seq.nextval from dual;
create sequence qnaboard_seq minvalue 0;
select qnaboard_seq.nextval from dual;
create sequence requestboard_seq minvalue 0;
select requestboard_seq.nextval from dual;
create sequence estimate_seq minvalue 0;
select estimate_seq.nextval from dual;
create sequence memo_seq minvalue 0;
select memo_seq.nextval from dual;
create sequence detailfield_seq minvalue 0;
select detailfield_seq.nextval from dual;
create sequence profileattachment_seq minvalue 0;
select profileattachment_seq.nextval from dual;
create sequence review_seq minvalue 0;
select review_seq.nextval from dual;
create sequence reviewattachment_seq minvalue 0;
select reviewattachment_seq.nextval from dual;
CREATE SEQUENCE MEMO_SEQ MINVALUE 0;
SELECT MEMO_SEQ.NEXTVAL FROM DUAL;


/* 문의 게시판 */
CREATE TABLE QnaBoard (
   Q_no VARCHAR2(8) NOT NULL, /* 문의 코드 */
   Q_TITLE NVARCHAR2(20), /* 제목 */
   Q_CONTENT NVARCHAR2(1000), /* 내용 */
   Q_WRITE_DATE DATE, /* 문의 날짜 */
   Q_WRITER NVARCHAR2(20), /* 작성자 */
   C_NO NUMBER(7), /* 댓글 번호 */
   Q_IS_SECRET CHAR(1), /* 비밀글여부 */
   Q_IS_NOTICE CHAR(1), /* 공지사항여부 */
   constraint pk_qnaboard primary key(q_no)
);


/*대표질문*/

CREATE TABLE RepQuestion (
   D_Q_NO NUMBER(1) NOT NULL, /* 질문 번호 > 기본키 */
   D_EMAIL varchar2(50) NOT NULL, /* 회원 id(email) */
   D_Q_CONTENT NVARCHAR2(300), /* 질문 내용 */
   constraint pk_repquestion primary key(d_q_no)
);

/*결제현황*/

CREATE TABLE NowPayment (
   P_CODE VARCHAR2(8) NOT NULL, /* 결제 코드 */
   P_DATE DATE, /* 결제 날짜 */
   P_REFUND_DATE number(1), /* 환불 가능일 */
   P_REFUND_IS_OK CHAR(1), /* 환불상태 */
   d_email varchar2(50),
   p_money number(7),
   constraint pk_nowpayment primary key(p_code)
);
select * from nowpayment;



/*분야*/

select * from dalin;
/* 제자회원*/
select * from jeja;
CREATE TABLE JEJA (
   J_MNO NUMBER(7) NOT NULL, /* 제자 회원 번호 */
   J_EMAIL VARCHAR2(50) NOT NULL, /* 회원 id(email) */
   J_PASSWORD VARCHAR2(60), /* 회원 비밀번호 */
   J_NAME NVARCHAR2(20), /* 회원 이름 */
   J_TEL VARCHAR2(11), /* 회원 전화번호 */
   J_ACCUSATION_CNT NUMBER(5), /* 신고 수 */
   ENABLED CHAR(1), /* 회원  상태(enabled) */
   J_JOINDATE DATE, /* 가입 날짜 */
   j_login_failure_cnt number(1), /* 로그인 실패횟수 */
   j_is_block char(1), /* 계정 블락 여부 */
   constraint pk_jeja primary key(j_mno)
);


/* 달인 회원 */

CREATE TABLE Dalin (
   D_MNO NUMBER(7) NOT NULL, /* 달인 회원 번호 */
   DETAIL_F_NAME NVARCHAR2(10) NOT NULL,
   F_NO VARCHAR2(10) NOT NULL, /* 분야 코드 */
   D_EMAIL varchar2(50) NOT NULL, /* 회원 id(email) */
   D_PASSWORD VARCHAR2(60), /* 비밀번호 */
   D_NAME NVARCHAR2(20), /* 이름 */
   D_TEL VARCHAR2(11), /* 전화번호 */
   ENABLED CHAR(1), /* 회원 상태(enabled) */
   D_DATE DATE, /* 가입날짜 */
   D_CASH NUMBER(8), /* 보유캐쉬 */
   D_PROFILE NVARCHAR2(50), /* 프사 */
   D_MAIN_SERVICE NVARCHAR2(30), /* 대표서비스 */
   D_INTRO NVARCHAR2(50), /* 한줄소개 */
   D_DETAIL_SERVICE NVARCHAR2(500), /* 서비스상세설명 */
   D_AREA NVARCHAR2(10), /* 활동지역 */
   D_PAYMENT_METHOD nvarchar2(20), /* 결제 수단 */
   P_ATTACHMENT_CNT NUMBER(1), /* 첨부파일 수 */
   D_LEVEL NVARCHAR2(10), /* 레벨 */
   R_NO NUMBER(5), /* 리뷰 번호 */
   P_ATTACHMENT_NO NUMBER(3), /* 프로필 첨부 파일 번호 */
   D_Q_NO NUMBER(1), /* 질문 번호 > 기본키 */
   D_login_failure_cnt number(1), /* 로그인 실패 횟수 */
   r_review_cnt number(7),
   constraint pk_dalin primary key(d_mno,f_no,d_email,detail_f_name)
);


/*세부분야*/

CREATE TABLE DetailField (
   F_NO VARCHAR2(10) NOT NULL, /* 분야 코드 */
   DETAIL_F_NAME NVARCHAR2(20), /* 세부 분야 이름 */
   DETAIL_F_SAJIN NVARCHAR2(70), /* 세부 분야 사진 */
   constraint pk_detailfield primary key(f_no,detail_f_name)
);

/* 요청서 */

CREATE TABLE Request (
   R_NO NUMBER(6) NOT NULL, /* 요청서번호 */
   J_MNO NUMBER(7) NOT NULL, /* 제자 회원 번호 */
   R_FIELD NVARCHAR2(10), /* 분야 */
   R_SUBJECT NVARCHAR2(10), /* 종목 */
   R_LESSON_PURPOSE NVARCHAR2(20), /* 레슨목적 */
   R_YOUR_LEVEL NVARCHAR2(5), /* 본인의 수준 */
   R_ITEM_EXISTS NVARCHAR2(10), /* 장비의유무 */
   R_LESSON_TYPE NVARCHAR2(10), /* 레슨형태(그룹, 개인) */
   R_WANT_DATE DATE, /* 원하는 날짜 */
   R_WANT_TIME NVARCHAR2(10), /* 원하는 수업시간 */
   R_AGE NVARCHAR2(3), /* 연령 */
   R_GENDER CHAR(1), /* 성별 */
   R_DALIN_IS_OK CHAR(1), /* 달인 수락 상태 */
   R_WANNABLE NVARCHAR2(100), /* 기타 문의 및 희망사항 */
   R_WANT_AREA NVARCHAR2(10), /* 희망 지역 */
   R_WRITE_DATE DATE, /* 작성 시간 */
   D_MNO NUMBER(6), /* 달인회원번호 */
   RB_ENABLED CHAR(1),
   R_IS_READ char(1), /* 읽음여부 */
   constraint pk_request primary key(r_no,j_mno)
);

/*신고회원*/

CREATE TABLE ReportedUser (
   D_MNO NUMBER(6) NOT NULL, /* 회원 번호 */
   J_MNO NUMBER(6) NOT NULL, /* 신고당한 회원 */
   R_REPORT_REASON NVARCHAR2(100),
   constraint pk_reporteduser primary key(d_mno,j_mno)
);

/*결제요청*/

CREATE TABLE RequestPayment (
   P_CODE VARCHAR2(8) NOT NULL, /* 결제 코드 */
   P_MONEY NUMBER(8), /* 결제 금액 */
   D_MNO NUMBER(7), /* 달인 회원 번호 */
   F_NO VARCHAR2(10), /* 분야 코드 */
   D_EMAIL varchar2(50), /* 회원 id(email) */
   constraint pk_requestpayment primary key(p_code)
);

/*환불현황*/

CREATE TABLE NowRefund (
   P_REFUND_CODE VARCHAR2(8) NOT NULL, /* 환불코드 */
   P_CODE VARCHAR2(8) NOT NULL, /* 결제 코드 */
   P_REQ_REFUND_DATE DATE, /* 환불 신청 날짜 */
   P_REFUND_IS_OK CHAR(1), /* 수락 여부 */
   constraint pk_nowrefund primary key(p_refund_code,p_code)
);

/*신고게시물*/

CREATE TABLE ReportedBoard (
   RB_NO NUMBER(6) NOT NULL, /* 글번호 */
   USERNAME VARCHAR2(50) NOT NULL, /* 회원아이디 */
   constraint pk_reportedboard primary key(rb_no,username)
);

/*관리자*/

CREATE TABLE Admin (
   AD_EMAIL VARCHAR2(50) NOT NULL, /* 관리자이메일 */
   AD_PASSWORD VARCHAR2(60), /* 관리자비밀번호 */
   AD_ENABLED CHAR(1), /* 관리자 상태 */
   constraint pk_admin primary key(ad_email)
);

/* 캐시 사용 내역 */

CREATE TABLE UseCash (
   E_NO NUMBER(7) NOT NULL, /* 견적서 번호 */
   D_MNO NUMBER(7) NOT NULL, /* 달인회원번호 */
   CA_ESTIMATE_CASH NUMBER(5), /* 견적서 작성 대금 */
   CA_USE_DATE DATE, /* 사용 날짜 */
   constraint pk_usecash primary key(e_no,d_mno)
);

select * from usecash;
select count(*) from usecash where d_mno=1;
insert into usecash values(1,1,2000,sysdate);
commit;
/*문의 답글*/

CREATE TABLE QnaComment (
   C_NO NUMBER(7) NOT NULL, /* 댓글 번호 */
   C_CODE VARCHAR2(8), /* 문의 코드 */
   C_CONTENT NVARCHAR2(500), /* 내용 */
   C_WRITE_DATE DATE, /* 작성 시간 */
   AD_EMAIL VARCHAR2(50), /* 관리자이메일 */
   constraint pk_qnacomment primary key(c_no)
);

/*요청서게시판*/

CREATE TABLE RequestBoard (
   RB_NO NUMBER(7) NOT NULL, /* 글번호  */
   RB_TITLE NVARCHAR2(50), /* 제목 */
   RB_CONTENT NVARCHAR2(1000), /* 내용 */
   RB_WRITE_DATE DATE, /* 작성 날짜 */
   RB_WRITER NVARCHAR2(20), /* 작성자 */
   RB_READ_CNT NUMBER(7), /* 조회수 - */
   RB_REPORT_CNT NUMBER(7), /* 신고횟수 - */
   RB_IS_REPORT CHAR(1), /* 신고여부 - */
   RB_IS_BLOCK CHAR(1), /* 블락여부 - */
   RB_IS_NOTICE CHAR(1), /* 공지사항여부 */
   R_NO NUMBER(6), /* 요청서번호 */
   J_MNO NUMBER(7), /* 제자 회원 번호 */
   constraint pk_requestboard primary key(rb_no)
);
/* 견적서 */

CREATE TABLE Estimate (
   E_NO NUMBER(6) NOT NULL, /* 견적서 번호 */
   D_MNO NUMBER(7) NOT NULL, /* 달인 회원 번호 */
   F_NO VARCHAR2(10) NOT NULL, /* 분야 코드 */
   J_MNO NUMBER(7) NOT NULL, /* 제자 회원 번호 */
   R_NO NUMBER(6) NOT NULL, /* 요청서번호 */
   D_EMAIL varchar2(50) NOT NULL, /* 회원 id(email) */
   E_MONEY NUMBER(8), /* 견적금액 */
   E_CONTENT NVARCHAR2(500), /* 견적내용 */
   E_TEL_TYPE NVARCHAR2(20), /* 연락수단 */
   J_IS_OK CHAR(1), /* 수락 여부 */
   E_CASH NUMBER(5), /* 필요 캐시 */
   d_name nvarchar2(6), /* 달인 이름 */
   e_is_read char(1), /* 읽음 여부 */
   constraint pk_estimate primary key(e_no,d_mno)
);

/*메모*/

CREATE TABLE Memo (
   M_NO NUMBER(6) NOT NULL, /* 쪽지번호 */
   RECIVER NVARCHAR2(20), /* 수신자 -  */
   SENDER NVARCHAR2(20), /* 발신자 -  */
   WRITE_TIME DATE, /* 시간 - */
   CONTENT NVARCHAR2(500), /* 내용 */
   TITLE NVARCHAR2(100), /* 제목 */
   IS_READ CHAR(1), /* 읽음안읽음 - */
   DISABLE_BY_SENDER CHAR(1),
   DISABLE_BY_RECEIER CHAR(1),
   constraint pk_memo primary key(m_no)
);

/*리뷰 권한*/

CREATE TABLE ReviewAuthority (
   A_COMPLETE_CODE VARCHAR2(8) NOT NULL, /* 계약완료코드 */
   D_MNO NUMBER(7), /* 달인 회원번호 */
   J_MNO NUMBER(7), /* 제자 회원번호 */
   A_IS_OK CHAR(1), /* 권한 여부 */
   constraint pk_reviewauthority primary key(a_complete_code)
);


/*프로필 첨부파일*/

CREATE TABLE ProfileAttachment (
   P_ATTACHMENT_NO NUMBER(3) NOT NULL, /* 프로필 첨부 파일 번호 */
   P_ORIGINAL_FILE_NAME NVARCHAR2(20), /* 원래파일이름 */
   P_SAVE_FILE_NAME NVARCHAR2(30), /* 저장용파일이름 */
   p_attachment_cnt number(1), /* 프로필 사진 개수 */
   P_IS_OK CHAR(1), /* 사진파일여부 */
   d_mno number(7),
   constraint pk_profileattachment primary key(p_attachment_no)
);

/* 리뷰&평점 */

CREATE TABLE Review (
   R_NO NUMBER(5) NOT NULL, /* 리뷰 번호 */
   R_DATE DATE, /* 작성날짜 */
   R_CONTENT NVARCHAR2(100), /* 작성 내용 */
   R_SCORE NUMBER(1), /* 별점 */
   R_SAJIN_CNT NUMBER(1), /* 첨부사진 수 */
   R_WRITER NVARCHAR2(20), /* 작성자  */
   S_NO NUMBER(6), /* 사진 번호 */
   d_mno number(7), /* 리뷰가 달린 달인 회원번호 */
   j_Accusation_cnt number(6), /* 리뷰 신고당한 횟수 */
   constraint pk_review primary key(r_no)
);
/*리뷰 첨부파일*/

CREATE TABLE ReviewAttachment (
   S_NO NUMBER(6) NOT NULL, /* 사진 번호 */
   S_ORIGINAL_FILE_NAME NVARCHAR2(20), /* 원래 파일이름 */
   S_FILE_NAME VARCHAR2(30), /* 시스템 파일이름 */
   constraint pk_reviewattachment primary key(s_no)
);
/* 권한 */

CREATE TABLE Authorities (
   USERNAME VARCHAR2(50) NOT NULL, /* 회원 id */
   AUTHORITY VARCHAR2(20) NOT NULL, /* 권한 */
   constraint pk_authorities primary key(username,authority)
);

create Table LESSONHISTORY (
    a_complete_code varchar2(8),
    D_MNO number(7),
    J_MNO number(7),
    L_START_DATE date,
    constraint pk_LESSONHISTORY primary key(a_complete_code)
);

select * from tab;

