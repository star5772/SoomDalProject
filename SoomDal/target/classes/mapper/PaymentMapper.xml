<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="paymentMapper">
	
	<insert id="insertToPayment">
		insert into RequestPayment(p_code,p_money,d_mno,f_no,d_email)
		values(#{pCode},#{pMoney},#{dMno},#{fNo},#{dEmail})
	</insert>
	
	<delete id="deleteToPayment">
		delete from requestpayment where d_email = #{dEmail}
	</delete>
	
	<select id="findByPayment" resultType="RequestPayment">
		select p_code pCode,p_money pMoney,d_mno dMno,f_no fNo,d_email dEmail
		from requestpayment
		where d_Email=#{dEmail} and rownum=1		
	</select>

	<select id="findPaymentCode" resultType="string">
		select p_code from requestpayment where d_email=#{dEmail} and rownum=1
	</select>
	
	<select id="findAllByPayment" resultType="RequestPayment">
		<![CDATA[
			select * from			
				(select r.* , rownum rnum from
					(select p_code pCode,p_money pMoney,f_no fNo,d_email dEmail from requestpayment) r
				where rownum <=#{endRowNum})
			where rnum >=#{startRowNum}
		]]>			
	</select>
		
	<select id="countToPayment" resultType="int">
		select count(*) from requestpayment
	</select>	
	
	<select id="findToCash" resultType="int">
		select p_money from requestPayment where p_code=#{pCode} and rownum=1
	</select>
	
	<update id="addCashToDalin">
		update dalin set d_cash=d_cash + #{dCash} where d_email=#{dEmail} and rownum=1
	</update>
	
	<select id="findByDalinCash" resultType="int">
		select d_cash dCash from dalin where d_email = #{dEmail} and rownum=1
	</select>
	
	<!--                 여기부터  결제내역 페이지                                                  -->
	<select id="countToNowPayment" resultType="int">
		select count(*) from  nowpayment
	</select>
	
	
	<insert id="insertNowPayment">
		insert into nowpayment(p_code,p_date,p_refund_date,p_refund_is_ok,d_email,p_money)
		values(#{pCode},sysdate,7,1,#{dEmail},#{pMoney})
	</insert>
	
	<select id="findByNowPaymentToAdmin" resultType="NowPayment">
		<![CDATA[
			select * from		
				(select n.*, rownum rnum from	
					(select p_code pCode, p_date pDate, p_refund_date pRefundDate,p_refund_is_ok pRefundIsOk,d_email dEmail,p_money pMoney from nowpayment) n
				where rownum <=#{endRowNum})	
			where rnum >=#{startRowNum}
		]]>			
	</select>
	
	<select id="findByNowPaymentToDalin" resultType="NowPayment">
		<![CDATA[
			select * from		
				(select n.*, rownum rnum from	
					(select p_code pCode, p_date pDate, p_refund_date pRefundDate,p_refund_is_ok pRefundIsOk,d_email dEmail,p_money pMoney from nowpayment where d_email=#{dEmail}) n
				where rownum <=#{endRowNum})	
			where rnum >=#{startRowNum}
		]]>	
	</select>
	
	<update id="updatePaymentToDalin">
		update nowpayment
		<trim prefix="SET" suffixOverrides=",">
			<if test="pRefundDate != null">p_refund_date = p_refund_date -1,</if>
			<if test="pRefundIsOk != null">p_refund_is_ok = #{pRefundIsOk},</if>
		</trim>
		where p_code = #{pCode} and rownum=1
	</update>
	
	<delete id="deleteToNowPayment">
		delete from nowpayment where pCode=#{pCode} and rownum=1
	</delete>
	
	<select id="findByNowpayment" resultType="NowPayment">
		select p_code pCode, p_date pDate, p_refund_date pRefundDate, p_refund_is_ok pRefundIsOk, d_email dEmail, p_money pMoney, p_request_refund pRequestRefund
		from nowpayment
		where d_email=#{dEmail} and rownum=1
	</select>	
</mapper>












